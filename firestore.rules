rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is a business owner
    function isBusinessUser() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "business";
    }

    // Allow users to read and write only their own data
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to access their own activities
    match /activities/{activityId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow users to access their own payments
    match /payments/{paymentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow users to access their own upcoming payments
    match /upcomingPayments/{paymentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Allow users to access hostels (read-only)
    match /hostels/{hostelId} {
      allow read: if request.auth != null;
      // Allow business users to read/write hostels they own
      allow write: if isBusinessUser() && request.resource.data.businessId == request.auth.uid;
    }
    
    // Allow users to manage their favorite hostels
    match /favorites/{favoriteId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow users to access their own bookings
    match /bookings/{bookingId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.businessId == request.auth.uid ||
        resource.data.agentId != null
      );
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.businessId == request.auth.uid
      );
    }
    
    // Allow business users to access their business stats
    match /businessStats/{businessId} {
      allow read: if request.auth != null && request.auth.uid == businessId;
      allow write: if request.auth != null && request.auth.uid == businessId;
    }
    
    // Allow business users to access rooms in their properties
    match /rooms/{roomId} {
      allow read: if request.auth != null;
      allow write: if isBusinessUser() && request.resource.data.businessId == request.auth.uid;
    }
    
    // Allow business users to access occupants in their properties
    match /occupants/{occupantId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.businessId == request.auth.uid
      );
      allow write: if isBusinessUser() && request.resource.data.businessId == request.auth.uid;
    }
    
    // Allow business users to access agents that work with them
    match /agents/{agentId} {
      allow read, write: if request.auth != null && (
        resource.data.agentId == request.auth.uid || 
        resource.data.businessIds[request.auth.uid] == true ||
        (resource.data.businessIds is list && request.auth.uid in resource.data.businessIds) ||
        isBusinessUser()
      );
    }
    
    // Allow business users to access agent commissions
    match /agentCommissions/{commissionId} {
      allow read, write: if request.auth != null && (
        resource.data.agentId == request.auth.uid || 
        resource.data.businessId == request.auth.uid ||
        isBusinessUser()
      );
    }
    
    // Allow access to agent bookings data
    match /agentBookings/{bookingId} {
      allow read, write: if request.auth != null && (
        resource.data.agentId == request.auth.uid || 
        resource.data.businessId == request.auth.uid ||
        isBusinessUser()
      );
    }
    
    // Default deny for all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}